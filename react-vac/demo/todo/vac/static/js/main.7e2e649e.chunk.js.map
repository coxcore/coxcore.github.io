{"version":3,"sources":["components/TodoContainer.module.scss","hooks/useStorage.js","hooks/todoReducer.js","hooks/useTodoList.js","components/TodoContainer.jsx","pages/TodoPage.jsx","index.js","components/VTodoList.module.scss","components/VTodoInput.module.scss"],"names":["module","exports","getItem","key","JSON","parse","localStorage","useStorage","initKey","useState","storageKey","setStorageKey","useMemo","data","select","update","datas","setItem","stringify","CHECK","REMOVE","CLEAR","todoActions","list","Array","isArray","value","newDodo","id","Date","now","checked","map","item","filter","todo","todoReducer","state","action","type","checkArray","initList","useTodoList","modelId","storage","useReducer","dispatch","actions","updateModel","selectModel","addTodo","checkTodo","ACTIONS","removeTodo","clear","useEffect","TodoContainer","setValue","vTodoInputProps","onChange","event","target","onSubmit","vTodoListProps","each","onCheck","onRemove","className","style","container","title","name","TodoPage","Component","rootEl","document","getElementById","App","render"],"mappings":"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","file":"static/js/main.7e2e649e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TodoContainer_title__RjrxK\",\"container\":\"TodoContainer_container__L-1Hm\"};","import { useState, useMemo } from 'react';\n\n/**\n * storage hook\n */\nconst useStorage = (initKey) => {\n    const [storageKey, setStorageKey] = useState(initKey);\n\n    return useMemo(\n        () => ({\n            get key() {\n                return storageKey;\n            },\n\n            get data() {\n                return getItem(storageKey);\n            },\n\n            select: (key) => {\n                setStorageKey(key);\n                return getItem(key);\n            },\n\n            update: (datas) => {\n                localStorage.setItem(storageKey, JSON.stringify(datas));\n                return datas;\n            },\n        }),\n        [storageKey]\n    );\n};\n\nconst getItem = (key) => JSON.parse(localStorage.getItem(key));\n\nexport default useStorage;\n","export const SET = 'set';\nexport const ADD = 'add';\nexport const CHECK = 'check';\nexport const REMOVE = 'remove';\nexport const CLEAR = 'clear';\n\n/**\n * todo reducer\n */\nconst todoReducer = (state, action) =>\n    todoActions[action.type]?.(state, action) ?? state ?? [];\n\nconst todoActions = {\n    [SET]: (list, { data }) => (Array.isArray(data) ? data : []),\n\n    [ADD]: (list, { value }) => {\n        const newDodo = {\n            id: Date.now(),\n            value,\n            checked: false,\n        };\n\n        return value ? [...list, newDodo] : list;\n    },\n\n    [CHECK]: (list, { id, checked }) => {\n        return list.map((item) =>\n            item.id === id\n                ? {\n                      ...item,\n                      checked: checked ?? !item.checked,\n                  }\n                : item\n        );\n    },\n\n    [REMOVE]: (list, { id }) => {\n        return list.filter((todo) => todo.id !== id);\n    },\n\n    [CLEAR]: () => {\n        return [];\n    },\n};\n\nexport default todoReducer;\n","import { useMemo, useEffect, useReducer } from 'react';\nimport useStorage from './useStorage';\nimport todoReducer, * as ACTIONS from './todoReducer';\n\n/**\n * todo list store\n */\nconst useTodoList = (modelId) => {\n    const storage = useStorage(modelId);\n    const [list, dispatch] = useReducer(todoReducer, checkArray(storage.data));\n\n    const actions = useMemo(\n        () => ({\n            updateModel: storage.update,\n\n            selectModel: (modelId) =>\n                dispatch({ type: ACTIONS.SET, data: storage.select(modelId) }),\n\n            addTodo: (value) => dispatch({ type: ACTIONS.ADD, value }),\n\n            checkTodo: (id, checked) =>\n                dispatch({ type: ACTIONS.CHECK, id, checked }),\n\n            removeTodo: (id) => dispatch({ type: ACTIONS.REMOVE, id }),\n\n            clear: () => dispatch({ type: ACTIONS.CLEAR }),\n        }),\n        [storage]\n    );\n\n    useEffect(() => {\n        actions.updateModel(list);\n    }, [list, actions]);\n\n    return [list, actions];\n};\n\nconst checkArray = (initList) => (Array.isArray(initList) ? initList : []);\n\nexport default useTodoList;\n","import React, { useState } from 'react';\n\nimport useTodoList from '../hooks/useTodoList';\n\nimport { VACInput, VACList } from 'react-vac';\n\nimport VTodoInput from './VTodoInput';\nimport VTodoList from './VTodoList';\n\nimport style from './TodoContainer.module.scss';\n\nconst TodoContainer = () => {\n    // Business Logic\n    const [list, { addTodo, checkTodo, removeTodo }] = useTodoList('userId');\n\n    // Input state 추가\n    const [value, setValue] = useState('');\n\n    // VTodoInput Props Object\n    const vTodoInputProps = {\n        value, // Input state 적용\n\n        onChange: (event) => setValue(event.target.value), // Input state 제어\n        onSubmit: () => {\n            addTodo(value); // Input state 사용\n            setValue(''); // Input state 초기화\n        },\n    };\n\n    // VTodoList Props Object\n    const vTodoListProps = {\n        list, // TodoList data 적용\n\n        // each 추가\n        each: ({ id, value, checked }) => ({\n            id,\n            value,\n            checked,\n\n            // TodoList action 적용\n            onCheck: () => checkTodo(id),\n            onRemove: () => removeTodo(id),\n        }),\n    };\n\n    return (\n        <div className={style.container}>\n            <h1 className={style.title}>Todo List</h1>\n\n            {/* VAC Debugger */}\n            {/* VAC Debugger input preset 사용 */}\n            <VACInput name=\"VTodoInput\" data={vTodoInputProps} />\n\n            {/* VAC Debugger list preset 사용 */}\n            <VACList name=\"VTodoList\" data={vTodoListProps} />\n\n            {/* Real VAC */}\n            {/* <VTodoInput {...vTodoInputProps} /> */}\n            {/* <VTodoList {...vTodoListProps} /> */}\n        </div>\n    );\n};\n\nexport default TodoContainer;\n","import React, { Component } from 'react';\n\nimport TodoContainer from '../components/TodoContainer';\n\nclass TodoPage extends Component {\n    render() {\n        return <TodoContainer />;\n    }\n}\n\nexport default TodoPage;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport TodoPage from './pages/TodoPage';\nimport './scss/global.scss';\n\nconst rootEl = document.getElementById('root');\n\nconst App = <TodoPage />;\n\nrender(App, rootEl);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_todo\":\"VTodoList_list_todo__1M6wv\",\"no_data\":\"VTodoList_no_data__2xalx\",\"item_todo\":\"VTodoList_item_todo__2PZqc\",\"label\":\"VTodoList_label__RH1Rd\",\"icon_checkbox\":\"VTodoList_icon_checkbox__2aiWO\",\"is_checked\":\"VTodoList_is_checked__2aP5v\",\"icon_delete\":\"VTodoList_icon_delete__3B3yp\",\"input_checkbox\":\"VTodoList_input_checkbox__2eGL6\",\"text\":\"VTodoList_text__rgtOh\",\"button_delete\":\"VTodoList_button_delete__gT-2R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area_input\":\"VTodoInput_area_input__3a1vr\",\"input_todo\":\"VTodoInput_input_todo__3fCsU\",\"button_summit\":\"VTodoInput_button_summit__2sZHc\"};"],"sourceRoot":""}