{"version":3,"sources":["components/TodoList.module.scss","store/todo.js","components/TodoInput.jsx","components/TodoList.jsx","components/TodoContainer.jsx","index.js","components/TodoInput.module.scss","components/TodoContainer.module.scss"],"names":["module","exports","TodoStore","_target","_update","list","setState","localStorage","setItem","JSON","stringify","observer","target","parse","getItem","getList","state","addItem","value","newList","id","Date","now","checked","deleteItem","filter","length","checkItem","changed","map","data","index","clear","TodoInput","onChange","onSubmit","className","style","area_input","type","input_todo","placeholder","button_summit","onClick","TodoList","each","list_todo","item","onCheck","onDelete","checkboxId","checkedClass","is_checked","classnames","item_todo","input_checkbox","htmlFor","label","icon_checkbox","text","button_delete","aria-label","icon_delete","no_data","TodoContainer","props","UNSAFE_componentWillMount","todo","getItemProps","store","todoInputProps","this","event","todoListProps","container","title","React","Component","rootEl","document","getElementById","App","render"],"mappings":"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","file":"static/js/main.df410e8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_todo\":\"TodoList_list_todo__1nYKR\",\"no_data\":\"TodoList_no_data__P5fmx\",\"item_todo\":\"TodoList_item_todo__26j9a\",\"label\":\"TodoList_label__3DOjD\",\"icon_checkbox\":\"TodoList_icon_checkbox__3t1LD\",\"is_checked\":\"TodoList_is_checked__Miamm\",\"icon_delete\":\"TodoList_icon_delete__m8TSH\",\"input_checkbox\":\"TodoList_input_checkbox__GtEkl\",\"text\":\"TodoList_text__21gwK\",\"button_delete\":\"TodoList_button_delete__3XN66\"};","class TodoStore {\n    constructor() {}\n\n    _target = null;\n\n    _update = (list = []) => {\n        if (!this._target) {\n            return;\n        }\n\n        this._target.setState({ list: list });\n        localStorage.setItem('list', JSON.stringify(list));\n    };\n\n    observer = (target) => {\n        this._target = target;\n\n        this._target.setState({\n            list: JSON.parse(localStorage.getItem('list')) || [],\n        });\n    };\n\n    getList = () => (this._target ? this._target.state.list : []);\n\n    addItem = (value) => {\n        if (!value) {\n            return;\n        }\n\n        const list = this.getList();\n        const newList = [...list, { id: Date.now(), value, checked: false }];\n\n        this._update(newList);\n    };\n\n    deleteItem = (id) => {\n        const list = this.getList();\n        const newList = list.filter(({ id: itemId }) => itemId !== id);\n\n        if (list.length !== newList.length) {\n            this._update(newList);\n        }\n    };\n\n    checkItem = (id) => {\n        let changed = false;\n        const list = this.getList();\n        const newList = list.map((data, index) => {\n            if (data.id === id) {\n                changed = true;\n                const { id, value, checked } = data;\n                return { id, value, checked: !checked };\n            }\n            return data;\n        });\n\n        if (changed) {\n            this._update(newList);\n        }\n    };\n\n    clear = () => {\n        this._update([]);\n    };\n}\n\nconst create = () => new TodoStore();\n\nexport default {\n    create,\n};\n","import React from 'react';\nimport style from './TodoInput.module.scss';\n\nconst TodoInput = ({ value, onChange, onSubmit }) => {\n    return (\n        <form>\n            <div className={style.area_input}>\n                <input\n                    type=\"text\"\n                    className={style.input_todo}\n                    placeholder=\"할 일을 입력해주세요\"\n                    value={value}\n                    onChange={onChange}\n                />\n                <button\n                    type=\"button\"\n                    className={style.button_summit}\n                    onClick={onSubmit}\n                >\n                    등록\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default TodoInput;\n","import React from 'react';\nimport classnames from 'classnames';\nimport style from './TodoList.module.scss';\n\nconst TodoList = ({ list, each }) => {\n    return list && list.length > 0 ? (\n        <ul className={style.list_todo}>\n            {list.map((item, index) => {\n                const { id, value, checked, onCheck, onDelete } = each(item);\n\n                const checkboxId = `checkbox_${id}`;\n                const checkedClass = {\n                    [style.is_checked]: checked,\n                };\n\n                return (\n                    <li\n                        key={id}\n                        className={classnames(style.item_todo, checkedClass)}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            id={checkboxId}\n                            className={style.input_checkbox}\n                            checked={checked}\n                            onChange={onCheck}\n                        />\n                        <label htmlFor={checkboxId} className={style.label}>\n                            <i className={style.icon_checkbox} />\n                            <span className={style.text}>{value}</span>\n                        </label>\n                        <button\n                            type=\"button\"\n                            className={style.button_delete}\n                            aria-label=\"삭제\"\n                            onClick={onDelete}\n                        >\n                            <i className={style.icon_delete} />\n                        </button>\n                    </li>\n                );\n            })}\n        </ul>\n    ) : (\n        <div className={style.no_data}>할 일 목록이 없습니다.</div>\n    );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport store from '../store/todo';\n// import VAC from 'react-vac';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\nimport style from './TodoContainer.module.scss';\n\nclass TodoContainer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [],\n            value: '',\n        };\n\n        this.todo = store.create(this);\n\n        this.getList = this.todo.getList; // this.getList();\n        this.addItem = this.todo.addItem; // this.addItem('할일');\n        this.checkItem = this.todo.checkItem; // this.checkItem('id');\n        this.deleteItem = this.todo.deleteItem; // this.removeItem('id');\n        this.clear = this.todo.clear; // this.clear();\n    }\n\n    UNSAFE_componentWillMount = () => {\n        this.todo.observer(this);\n    };\n\n    // 리스트 아이템 컴포넌트의 props 변환용 콜백함수\n    getItemProps = ({ id, value, checked }, index) => ({\n        id,\n        value,\n        checked,\n        onCheck: () => this.checkItem(id),\n        onDelete: () => this.deleteItem(id),\n    });\n\n    render() {\n        // TodoInput props object\n        const todoInputProps = {\n            value: this.state.value,\n            onChange: (event) => this.setState({ value: event.target.value }),\n            onSubmit: () => {\n                this.addItem(this.state.value);\n                this.setState({ value: '' });\n            },\n        };\n\n        // TodoList props object\n        const todoListProps = {\n            list: this.getList(),\n            each: this.getItemProps,\n        };\n\n        return (\n            <div className={style.container}>\n                <h1 className={style.title}>Todo List</h1>\n\n                <TodoInput {...todoInputProps} />\n                {/* <VAC\n                    name=\"TodoInput\"\n                    data={todoInputProps}\n                    useValue=\"value\"\n                    onChange=\"onChange\"\n                /> */}\n\n                <TodoList {...todoListProps} />\n                {/* <VAC\n                    name=\"TodoLIst\"\n                    data={todoListProps}\n                    useList=\"list\"\n                    useEach=\"each\"\n                /> */}\n            </div>\n        );\n    }\n}\n\nexport default TodoContainer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './scss/global.scss';\nimport TodoContainer from './components/TodoContainer';\n\nconst rootEl = document.getElementById('root');\n\nconst App = <TodoContainer />;\n\nrender(App, rootEl);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area_input\":\"TodoInput_area_input__2-8IQ\",\"input_todo\":\"TodoInput_input_todo__3ZA9Q\",\"button_summit\":\"TodoInput_button_summit__1H8cX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TodoContainer_title__RjrxK\",\"container\":\"TodoContainer_container__L-1Hm\"};"],"sourceRoot":""}